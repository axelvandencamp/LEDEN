-----------------------------------------
--
-- Te gebruiken voor maandelijkse statistieken
-- - leden per provincie
-- - leden per afdeling
-- - nieuwwe leden per wervende afdeling
--
-- OPMERKING
-- - voor ledencijfers "OGM" in comment laten; geeft verdubbelingen
-- - ook alle "ml." velden weglaten om zelfde reden
-----------------------------------------

--=================================================================
--
-- REGEL voor ivm uitsluiting opgezegden herzien (of procedure van opzegging)
--
--=================================================================
--SET VARIABLES
DROP TABLE IF EXISTS _AV_myvar;
CREATE TEMP TABLE _AV_myvar 
	(startdatum DATE, einddatum DATE
	 ,afdeling NUMERIC, postcode TEXT, herkomst_lidmaatschap NUMERIC, wervende_organisatie NUMERIC, test_id NUMERIC
	 );

INSERT INTO _AV_myvar VALUES('2023-01-01',	--startdatum
				'2024-12-31',	--einddatum
				248494, --afdeling 	
				'2260', --postcode
				494,  	--numeric 
				248585,	--wervende_organisatie
				'16382'	--numeric
				);
SELECT * FROM _AV_myvar;
--====================================================================
--====================================================================
SELECT	DISTINCT--COUNT(p.id) _aantal, now()::date vandaag
	p.id database_id, 
	p.membership_nbr lidnummer, 
	COALESCE(p.first_name,'') as voornaam,
	COALESCE(p.last_name,'') as achternaam,
	COALESCE(p.street2,'') huisnaam,
	CASE
		WHEN c.id = 21 AND p.crab_used = 'true' THEN COALESCE(ccs.name,'')
		ELSE COALESCE(p.street,'')
	END straat,
	CASE
		WHEN c.id = 21 AND p.crab_used = 'true' THEN COALESCE(p.street_nbr,'') ELSE ''
	END huisnummer, 
	COALESCE(p.street_bus,'') bus,
	CASE
		WHEN c.id = 21 AND p.crab_used = 'true' THEN COALESCE(cc.zip,'')
		ELSE COALESCE(p.zip,'')
	END postcode,
	CASE 
		WHEN c.id = 21 THEN COALESCE(cc.name,'') ELSE COALESCE(p.city,'') 
	END woonplaats,
	_crm_land(c.id) land,
	p.email,
	COALESCE(p.phone_work,p.phone) telefoonnr,
	p.mobile gsm,
	CASE WHEN p.address_state_id = 2 THEN 1 ELSE 0 END adres_verkeerd,
	CASE WHEN COALESCE(sm.sm_id,0) > 0 THEN 1 ELSE 0 END DOMI,
	COALESCE(mo.name,'') herkomst_lidmaatschap,
	p.membership_state huidige_lidmaatschap_status,
	COALESCE(p.membership_start,p.create_date::date) aanmaak_datum,
	p.membership_start Lidmaatschap_startdatum, 
	p.membership_stop Lidmaatschap_einddatum,  
	p.membership_pay_date betaaldatum,
	p.membership_renewal_date hernieuwingsdatum,
	p.membership_end recentste_einddatum_lidmaatschap,
	p.membership_cancel membership_cancel,
	_crm_opzegdatum_membership(p.id) opzegdatum_LML,
	p.active
FROM 	_av_myvar v, res_partner p
	--Voor de ontdubbeling veroorzaakt door meedere lidmaatschapslijnen
	LEFT OUTER JOIN (SELECT * FROM _av_myvar v, membership_membership_line ml JOIN product_product pp ON pp.id = ml.membership_id WHERE  ml.date_to BETWEEN v.startdatum and v.einddatum AND pp.membership_product) ml ON ml.partner = p.id
	--idem: versie voor jaarwisseling (januari voor vorige jaar)
	--LEFT OUTER JOIN (SELECT * FROM _av_myvar v, membership_membership_line ml JOIN product_product pp ON pp.id = ml.membership_id WHERE  ml.state = 'paid' AND ml.date_to BETWEEN v.startdatum and v.einddatum AND pp.membership_product) ml ON ml.partner = p.id
	--land, straat, gemeente info
	JOIN res_country c ON p.country_id = c.id
	LEFT OUTER JOIN res_country_city_street ccs ON p.street_id = ccs.id
	LEFT OUTER JOIN res_country_city cc ON p.zip_id = cc.id
	--herkomst lidmaatschap
	LEFT OUTER JOIN res_partner_membership_origin mo ON p.membership_origin_id = mo.id
	--aangemaakt door 
	--JOIN res_users u ON u.id = p.create_uid
	--afdeling vs afdeling eigen keuze
	--LEFT OUTER JOIN res_partner a ON p.department_id = a.id
	--LEFT OUTER JOIN res_partner a2 ON p.department_choice_id = a2.id
	--bank/mandaat info
	--door bank aan mandaat te linken en enkel de mandaat info te nemen ontdubbeling veroorzaakt door meerdere bankrekening nummers
	LEFT OUTER JOIN (SELECT pb.id pb_id, pb.partner_id pb_partner_id, sm.id sm_id, sm.state sm_state FROM res_partner_bank pb JOIN sdd_mandate sm ON sm.partner_bank_id = pb.id WHERE sm.state = 'valid') sm ON pb_partner_id = p.id
	--facturen info
	--LEFT OUTER JOIN account_invoice_line il ON il.id = ml.account_invoice_line
	--LEFT OUTER JOIN account_invoice i ON i.id = il.invoice_id
	--parnter info
	--LEFT OUTER JOIN res_partner a3 ON i.partner_id = a3.id
	--LEFT OUTER JOIN res_partner p6 ON p.relation_partner_id = p6.id

--=============================================================================
WHERE 	p.active = 't'	
	--we tellen voor alle actieve leden
	AND COALESCE(p.deceased,'f') = 'f' 
	--overledenen niet
	AND p.membership_end = '2022-12-31'
	
	